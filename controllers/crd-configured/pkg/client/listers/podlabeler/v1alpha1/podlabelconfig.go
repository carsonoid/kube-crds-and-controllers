/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/carsonoid/kube-crds-and-controllers/controllers/crd-configured/pkg/apis/podlabeler/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PodLabelConfigLister helps list PodLabelConfigs.
type PodLabelConfigLister interface {
	// List lists all PodLabelConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PodLabelConfig, err error)
	// PodLabelConfigs returns an object that can list and get PodLabelConfigs.
	PodLabelConfigs(namespace string) PodLabelConfigNamespaceLister
	PodLabelConfigListerExpansion
}

// podLabelConfigLister implements the PodLabelConfigLister interface.
type podLabelConfigLister struct {
	indexer cache.Indexer
}

// NewPodLabelConfigLister returns a new PodLabelConfigLister.
func NewPodLabelConfigLister(indexer cache.Indexer) PodLabelConfigLister {
	return &podLabelConfigLister{indexer: indexer}
}

// List lists all PodLabelConfigs in the indexer.
func (s *podLabelConfigLister) List(selector labels.Selector) (ret []*v1alpha1.PodLabelConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PodLabelConfig))
	})
	return ret, err
}

// PodLabelConfigs returns an object that can list and get PodLabelConfigs.
func (s *podLabelConfigLister) PodLabelConfigs(namespace string) PodLabelConfigNamespaceLister {
	return podLabelConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PodLabelConfigNamespaceLister helps list and get PodLabelConfigs.
type PodLabelConfigNamespaceLister interface {
	// List lists all PodLabelConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PodLabelConfig, err error)
	// Get retrieves the PodLabelConfig from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PodLabelConfig, error)
	PodLabelConfigNamespaceListerExpansion
}

// podLabelConfigNamespaceLister implements the PodLabelConfigNamespaceLister
// interface.
type podLabelConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PodLabelConfigs in the indexer for a given namespace.
func (s podLabelConfigNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PodLabelConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PodLabelConfig))
	})
	return ret, err
}

// Get retrieves the PodLabelConfig from the indexer for a given namespace and name.
func (s podLabelConfigNamespaceLister) Get(name string) (*v1alpha1.PodLabelConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("podlabelconfig"), name)
	}
	return obj.(*v1alpha1.PodLabelConfig), nil
}
